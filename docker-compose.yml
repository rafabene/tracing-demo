version: "3"
services:
  mysql:
    hostname: mysql
    image: mysql:8
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_DATABASE=opentelemetry
  lgtm:
    hostname: lgtm
    image: grafana/otel-lgtm
    ports:
      - "3001:3000" # Grafana UI
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP HTTP receiver, not yet used by Quarkus, optional
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "32181:32181"
  kafka:
    hostname: kafka
    image: confluentinc/cp-kafka:7.3.0
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_HOST://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_HOST
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
  microservicec:
    hostname: microservicec
    build:
      context: "microserviceC"
    ports:
      - "3000:3000"
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://lgtm:4318
    depends_on:
      - mysql
  microserviceb:
    hostname: microserviceb
    build:
      context: "microserviceB"
    ports:
      - "8081:8080"
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://lgtm:4318
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql/opentelemetry
      - KAFKA_URL=kafka:9093
      - MICROSERVICEC_URL=http://microservicec:3000/hello/{name}
    depends_on:
      - mysql
  microservicea:
    hostname: microservicea
    build:
      context: "microserviceA"
      dockerfile: "src/main/docker/Dockerfile.jvm"
    ports:
      - "8080:8080"
    environment:
      - QUARKUS_OTEL_EXPORTER_OTLP_ENDPOINT=http://lgtm:4317
      - quarkus_rest_client_serviceb_url=http://microserviceb:8080/
    depends_on:
      - microserviceb
